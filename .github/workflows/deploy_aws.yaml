name: Deploy AWS

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Tests
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'yarn'

    - name: Run test and lint
      run: |
        yarn install --frozen-lockfile
        yarn test --coverage
        npx eslint src --ext .js,.jsx,.ts,.tsx

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: 'https://sonarcloud.io'

  deploy-ecs:
    needs: [ test ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{secrets.ECR_REPOSITORY}}
          IMAGE_TAG: latest
        run: |
          echo ${{secrets.ECR_REPOSITORY}}/fiat-tech-producao:$IMAGE_TAG
          docker build -t ${{secrets.ECR_REPOSITORY}}/fiat-tech-producao:$IMAGE_TAG .
          docker push ${{secrets.ECR_REPOSITORY}}/fiat-tech-producao:$IMAGE_TAG

      - name: Update ECS TASK Definition
        env: 
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ECS_ROLE: ${{ secrets.AWS_ECS_ROLE }}
        run: |
          sed -e "s/\${AWS_ACCOUNT_ID}/${AWS_ACCOUNT_ID}/g" -e "s/\${AWS_ECS_ROLE}/${AWS_ECS_ROLE}/g" ecs/task-definition-template.json > ecs/task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs/task-definition.json
          container-name: fiat-tech-producao
          image: ${{secrets.ECR_REPOSITORY}}/fiat-tech-producao:latest
          environment-variables: |
              NODE_ENV=${{ secrets.NODE_ENV }}
              DB_URI=${{ secrets.DB_URI }}
              PRODUTO_MS_URL=${{ secrets.PRODUTO_MS_URL }}
              FILA_PAGAMENTO_URL=${{ secrets.FILA_PAGAMENTO_URL }}
              AWS_REGION=${{ secrets.AWS_REGION }}
              AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
              AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
              FILA_ENVIO_PAGAMENTO=${{ secrets.FILA_ENVIO_PAGAMENTO }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          force-new-deployment: true
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          cluster: ${{ secrets.ECS_CLUESTER }}